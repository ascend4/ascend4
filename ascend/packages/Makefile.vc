#  ASCEND external packages Makefile, MS VC++4.2 version
#  Mark Thomas
#  July 29, 1997
#  $Revision: 1.1 $
#  $Date: 1997/07/29 17:49:34 $
#  $Author: mthomas $
#  $Source: /afs/cs.cmu.edu/project/ascend/Repository/ascend4/packages/Makefile.vc,v $
#
# This file builds the objects from external sources. The
# ascend interfaces to these objects are currently built
# in the compiler, though they should probably be built here
# as well. Since that is the case, this file assumes libpackages.a
# exists in ../archive and adds the external objects to it.
# This means this directory should be remade anytime libpackages.a
# is remade via the compiler.
#
# Eventually this should also be the home to the BLAS files that
# are common to minos, lsode, etc.


builddir = ..
srcdir = .
VPATH = .



#  The next variables are the primary executables and/or libraries that
#  this makefile is responsible for, and the default target of this
#  makefile.

EXECUTABLE = 

LIBRARY  = packages.lib


default: $(LIBRARY)



#  Defines and Includes that are specific to this directory

DIR_SPECIFIC_DEFS = $(HAVE_PACKAGES)
DIR_SPECIFIC_INCS = 



#  The next variables list the source files (EXEC_SCRS) to compile
#  into the object files (EXEC_OBJS) that are linked with the
#  library files (EXEC_LIBS) to make EXECUTABLE

EXEC_SRCS = 

EXEC_OBJS = 

EXEC_LIBS = 



#  The next variables list the source files (LIB_SCRS) to compile
#  into the object files (LIB_OBJS) that are combined to make LIBRARY

LIB_SRCS = \
	sensitivity.c

LIB_OBJS = \
	sensitivity.obj



#  The global makefile macros (ConfigAscend) and global rules (Makefile.Rules)
#  
!include $(builddir)\ConfigAscend.vc
!include $(builddir)\Makefile.Rules.vc



#  File specific rules

#---------------------
##OLD>>>#PACKAGE_SRCS = kvalues.c bisect.c sensitivity.c
##OLD>>>PACKAGE_SRCS = sensitivity.c
##OLD>>>#PACKAGE_BINS = kvalues.o bisect.o sensitivity.o
##OLD>>>PACKAGE_BINS = sensitivity.o
##OLD>>>
##OLD>>>
##OLD>>>
##OLD>>>#  Uncomment the following only if you want to do something specific
##OLD>>>#  to this directory that should override the ConfigAscend file
##OLD>>>#
##OLD>>>#CC = 
##OLD>>>#CFLAGS = 
##OLD>>>#SHARED_CFLAGS = 
##OLD>>>#LD = 
##OLD>>>#SHARED_LD_FLAGS = 
##OLD>>>#
##OLD>>>#  Uncomment the above only to override the ConfigAscend file
##OLD>>>
##OLD>>>
##OLD>>>#  Customize the following if required
##OLD>>>INCLUDES = $(ASCINC)
##OLD>>>DEPEND_INCLUDES = 
##OLD>>>DEFINES = $(GLOBAL_DEFS) $(MOD_ASCMALLOC)
##OLD>>>ALL_CFLAGS = $(INCLUDES) $(DEFINES) $(CFLAGS)
##OLD>>>DEPEND_FLAGS = $(INCLUDES) $(DEFINES)
##OLD>>>LDFLAGS = 
##OLD>>>SYSLIBS = 
##OLD>>>
##OLD>>>
##OLD>>>.SUFFIXES:
##OLD>>>.SUFFIXES: .c .i .o .f
##OLD>>>.c.o:
##OLD>>>	$(CC) $(ALL_CFLAGS) $(SHARED_CFLAGS) -c $<
##OLD>>>.c.i:
##OLD>>>	$(CPP) $(ALL_CFLAGS) $(SHARED_CFLAGS) $< > $@
##OLD>>>.f.o:
##OLD>>>	$(F77) $(F77_OPTS) $(F77FLAGS) $(SHARED_CFLAGS) -c $<
##OLD>>>
##OLD>>>
##OLD>>>
##OLD>>># This target will build both the libpackages.a archive as well
##OLD>>># as dynamically loadable libraries. A user can then choose which
##OLD>>># mode of operation, static or dynamic to use.
##OLD>>>
##OLD>>>all: libpackages.a shared_libs
##OLD>>>
##OLD>>>shared_libs: libkvalues.$(SHARED_ID) libbisect.$(SHARED_ID) \
##OLD>>>	libsensitivity.$(SHARED_ID)
##OLD>>>
##OLD>>>libkvalues.$(SHARED_ID): kvalues.o
##OLD>>>	$(LD) $(SHARED_LD_FLAGS) -o $@ kvalues.o
##OLD>>>
##OLD>>>libbisect.$(SHARED_ID): bisect.o
##OLD>>>	$(LD) $(SHARED_LD_FLAGS) -o $@ bisect.o
##OLD>>>
##OLD>>>libsensitivity.$(SHARED_ID): sensitivity.o
##OLD>>>	$(LD) $(SHARED_LD_FLAGS) -o $@ sensitivity.o
##OLD>>>
##OLD>>># shared libs that depend on fortran libraries require special care.
##OLD>>># That care will depend on wheter the fortran sources were f2c or
##OLD>>># if they are original fortran code. The order of linking is
##OLD>>># *everything*.
##OLD>>>#
##OLD>>>libdistil.$(SHARED_ID): distillation.o nrdist_sub2.o
##OLD>>>	$(LD) $(SHARED_LD_FLAGS) -o $@ distillation.o nrdist_sub2.o \
##OLD>>>		$(F77LIBS) $(MATHLIBS)
##OLD>>>
##OLD>>># This is a nice quick and dirty way if all the sources
##OLD>>># were well behaved. Unfortunately that is not the case.
##OLD>>># so it sits here as an artifact of my ingenuity.
##OLD>>>#
##OLD>>>#BINSTUBS = kvalues distillation bisect nrdist_sub2
##OLD>>>#shared_libs : $(BINSTUBS)
##OLD>>>#$(BINSTUBS) : $(PACK_BINS)
##OLD>>>#	$(LD) $(SHARED_LD_FLAGS) -o lib$@.$(SHARED_ID) $@.o
##OLD>>>
##OLD>>>
##OLD>>>
##OLD>>>install-binaries: $(LIB_DIR)
##OLD>>>#  no need to install libpackages.a since nothing uses it
##OLD>>>#	$(INSTALL_DATA) $(ARCHIVE)/libpackages.a $(LIB_DIR)/libpackages.a
##OLD>>>#	$(RANLIB) $(LIB_DIR)/libpackages.a
##OLD>>>
##OLD>>>
##OLD>>>
##OLD>>>clean mostlyclean:
##OLD>>>	$(RM) $(ARCHIVE)/libpackages.a lib*.$(SHARED_ID) *.o *.i core a.out
##OLD>>>
# DO NOT DELETE THIS LINE -- g++dep uses it.
# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.


# IF YOU PUT ANYTHING HERE IT WILL GO AWAY
