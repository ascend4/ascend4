                           MINOS DISTRIBUTION FILES
                           ========================
            
                       DEPARTMENT OF OPERATIONS RESEARCH
                              STANFORD UNIVERSITY


SYSTEM:     MINOS 5.4 (Dec 1992)


PURPOSE:    This is file m1minos.doc.  It describes the source files and
            data files needed to compile, link and test MINOS 5.4.


CONTENTS:   1. FILES
            2. HOW TO INSTALL AND TEST MINOS OR MINOSL
            3. CHANGES RELATIVE TO MINOS 5.1
            4. FURTHER INFORMATION


COPYRIGHT
NOTICE:     MINOS is normally distributed by Stanford Business Software Inc.
            on behalf of the Office of Technology Licensing at Stanford
            University, subject to certain license agreements.
            MINOS is copyrighted by Stanford University.  Users should not
            copy the source code, object code or executable code except for
            backup purposes.



FILES
=====

 1. m1minos.doc      (This file)

    The following files are the Fortran source code.
    To get a standard Fortran 77 file mi10mach.for,
    make some trivial changes to file mi10unix.for
    as described in m1cpu, the last subroutine in that file.

 2. mi00main.for
 3. mi05funs.for
 4. mi10unix.for     (for Unix systems and most other systems)
 5. mi10vms.for      (for DEC VAX/VMS systems---replace preceding file)
 6. mi15blas.for
 7. mi20amat.for
 8. mi25bfac.for
 9. mi30spec.for
10. mi35inpt.for
11. mi40bfil.for
12. mi50lp.for
13. mi60srch.for
14. mi65rmod.for
15. mi70nobj.for
16. mi80ncon.for
17. minosl.for       (Substitute for mi00main, mi05funs, mi60srch, mi65rmod,
                      mi70nobj, mi80ncon to solve LPs only)
18. minost.for       (Main program to test subroutine minoss)
19. minost.spc       (Data for minost.for, solving t4manne via minoss)


    The following files define some test problems.
    Subroutines defining the nonlinear objectives and constraints
    are in file mi05funs.for.

20. t1diet.mps       (LP test problem)
21. t1diet.spc     

22. t2banana.mps     (Unconstrained test problem)
23. t2banana.spc

24. t3qp.mps         (QP test problem)
25. t3qp.spc

26. t4manne.mps      (NLP test problem -- nonlinear obj and constraints)
27. t4manne.spc    

28. t5weapon.mps     (NLP test problem with nonlinear objective
29. t5weapon.spc      and linear constraints)

30. t6wood.mps       (NLP test problem with linear objective
31. t6wood.spc        and nonlinear constraints)

The following files will be useful on Unix systems.

32. unix.doc         (Special instructions for Unix systems)
33. unix.mak         (A typical Makefile)
34. unix.nam         (A script to rename Fortran files)
35. unix.run         (A typical script for running a Fortran program)


The following files will be useful on DEC VAX/VMS systems.

36. vminos.com       (DCL command file to run MINOS)
37. vminos.lnk       (link and make files 
38. vminos.mak        for use with vmsmake.com)
39. vminosl.com
40. vminosl.lnk
41. vminosl.mak
42. vminost.com
43. vminost.lnk
44. vminost.mak
45. vms.doc          (Special instructions for DEC VAX/VMS)
46. vmsc.opt         (Data to link the timer from the VAXC runtime library)
47. vmsmake.com      (DCL command file to help maintain Fortran programs)
48. vmsnames.com     (DCL file to rename various files)

49. zcms.doc         (Special instructions for IBM CMS mainframes)
50. zcray.doc        (Special instructions for Cray and Convex mainframes)


HOW TO INSTALL AND TEST MINOS OR MINOSL
=======================================

For Unix system,              see unix.doc.
For DEC VAX/VMS systems,      see vms.doc.
For IBM CMS systems,          see zcms.doc.
For Cray and Convex systems,  see zcray.doc.

For all systems, some general guidelines follow.
 

 1. Read Chapter 7 of the MINOS 5.1 User's Guide.
    If necessary, modify some of the machine-dependent routines
    contained in the appropriate mi10mach file.  On most machines,
    use mi10unix.for as mi10mach.for, and be sure to check subroutines
    m1init and m1cpu.
    Subroutine mifile may also need to be tailored to your system.
    (Unfortunately, file definitions vary from one machine to another.)


 2. For Cray and Convex machines and others for which single-precision
    arithmetic is adequate, make sure the Fortran files have been
    converted appropriately.  See zcray.doc.


 3. Compile the Fortran files for MINOS or MINOSL.


 4. Write a command file to link the object files.


 5. Write a command file to define run-time files
    and run MINOS or MINOSL.  Be aware of the file assignments in
    subroutine MIFILE and the OPEN statements in subroutine M1OPEN
    (both in mi10mach.for).

    Typical definitions for the test problem t5weapon are:
       File  4      t5weapon.spc         (Specs file    )
       File  6      output to terminal   (Summary file  )
       File  9      t5weapon.lis         (Output listing)
       File 10      t5weapon.mps         (MPS file      )
       File 11      t5weapon.basis       (Old Basis file)
       File 12      t5weapon.newbasis    (New Basis file)


 6. Run the LP test case "t1diet" and check against the solution
    listed in Section 8.1 of the MINOS 5.1 User's Guide.


 7. Run any or all of the nonlinear test problems, referring in the EXEC
    to the relevant SPC and MPS files.  Compare results with those given
    in the MINOS User's Guide:
      t2banana      an unconstrained example      (Section 8.1)
      t3qp          a small quadratic program     (Section 8.2)
      t4manne       problem MANNE                 (Section 8.4)
      t5weapon      the Weapon Assignment problem (Section 7.6)

    For t4manne, the iteration log will be different from that shown
    in Section 8.4, but the optimal objective value should be the same,
    close to 2.670.


 8. Read the MINOS 5.4 Release Notes.  (These are new Appendices
    for the MINOS 5.1 User's Guide.)


 9. Take the rest of the day off.


10. One day, read the rest of the MINOS User's Guide and allow for
    the exceptions listed below.



CHANGES RELATIVE TO MINOS 5.1
=============================

    The main changes are documented in the MINOS 5.4 Release Notes,
    supplied as Appendix A and B for the MINOS 5.1 User's Guide.
    (The Release Notes replace the existing appendices.)



FURTHER INFORMATION
===================

MINOS is distributed by

    Stanford Business Software Inc.       (415) 962-8719
    2672 Bayshore Parkway             Fax (415) 962-1869
    Mountain View, CA 94043

MINOS is licensed by

    The Office of Technology Licensing    (415) 723-0651
    Stanford University               Fax (415) 725-7295
    857 Serra Street
    Stanford, CA 94305-6225

MINOS 5.2 is part of the GAMS modeling system described in
"GAMS: A User's Guide" by Anthony Brooke, David Kendrick and
Alexander Meeraus, The Scientific Press, 1988.
Further details are available from the publisher:

    The Scientific Press                  (415) 583-8840
    651 Gateway Boulevard, Suite 1100
    South San Francisco, CA 94080-7014

MINOS 5.4 is part of the AMPL modeling system described in
"AMPL: A Modeling Language for Mathematical Programming"
by Robert Fourer, David M. Gay and Brian W. Kernighan,
The Scientific Press, 1992.

MINOS support is available for a fee from

    Dr. John Stone                        (415) 858-0686
    Ketron Management Science, Inc.
    4245 Ponce Drive
    Palo Alto, CA 94306

MINOS questions of a brief nature may be directed to

    Professor Michael Saunders            (415) 723-1875
    Dept of Operations Research           Mike@SOL-Michael.Stanford.edu
    Stanford University                   na.saunders@na-net.ornl.gov
    Stanford, CA 94305-4022           Fax (415) 723-4107
or
    Professor Bruce Murtagh
    Graduate School of Management         bmurtagh@suna.mqcc.mq.oz.au
    Macquarie University
    Sydney, NSW 2109
    Australia

End of m1minos.doc
