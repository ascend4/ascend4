#!/usr/bin/perl -w
use File::Basename;

print "\nUse this script to create a new ascend executable\n\n";

# if called with incorrect number of parameters, print out usage
# message
if($#ARGV ne 2)
{
    print "
Usage is: a4setup newDirectory pathToConfigure pathToTk
where the parameters are as follows
  newDirectory:    the directory tree in which the system
                   will create the ascend executable.  Its
                   structure will parallel that of the 
                   directory tree containing the source code
  pathToConfigure: the relative path from here to the
                   directory containing configure
  pathToTk:        the absolute path to where tcl and tk
                   are located on the computer

An example use is: a4setup a4new/ unixAC213/ /usr/local/lib/tk\n\n";
    die "Abandoning execution.  Incorrect number of parameters.\n\n";
}

# retrieve parameters
$newDirectory    = $ARGV[0];
$pathToConfigure = $ARGV[1];
$pathToTk        = $ARGV[2];
chomp($newDirectory);
chomp($pathToConfigure);
chomp($pathToTk);

# if directory already exists, ask if old version should be removed
if (-e $newDirectory)
{
    print "
WARNING: Subdirectory \"$newDirectory\" already exists.
         May I delete it (y or n)?: ";
    $ans = <STDIN>;
    chomp($ans);
    if($ans ne 'y')
    {
        die "\nOkay, I am abandoning this attempt\n\n";
    }

    system "rm -r $newDirectory";
}

# create backbone of the parallel tree into which all files created 
# while compiling and linking are to be placed
system "mkdir $newDirectory";
system "mkdir $newDirectory/trunk";
system "mkdir $newDirectory/trunk/base";
system "mkdir $newDirectory/trunk/base/generic";
system "mkdir $newDirectory/trunk/tcltk98";

# create symbolic links to point to ascend models and interface tcl code.
# This linking is needed until interface code is compiled as a library -
# something we will be doing later
chdir "$newDirectory/trunk";
system "ln -s ..\/..\/$pathToConfigure\/..\/..\/models models";
chdir "tcltk98";
system "ln -s ..\/..\/..\/$pathToConfigure\/..\/..\/tcltk98\/TK TK";
chdir "../../..";

# locate prototype reconfig file - in same directory as a4setup
open localBin, "which a4setup |";
$locBin = <localBin>;
close localBin;
($locBinPath) = (fileparse($locBin, ""))[1];
chomp($locBinPath);

# copy prototype reconfig file into parallel tree and execute it
system "cp $locBinPath\/a4reconfig__ $newDirectory\/trunk\/base\/generic\/reconfig";
print "\nDirectory tree just created\n";
system "ls -R $newDirectory";
print "\n\n";
chdir "$newDirectory/trunk/base/generic";
system "a4reconfig__ $pathToConfigure $pathToTk";

# compile new ascend executable
system "make";

# done
print "\n\nTo run ascend execute the following statement from this location

  $newDirectory/trunk/base/generic/bin/ascend4\n\n";
