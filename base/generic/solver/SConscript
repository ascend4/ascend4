Import('libascend_env')

csrcs = Split("""

	analyze.c bnd.c bndman.c calc.c cond_config.c
	conditional.c densemtx.c discrete.c incidence.c linsol.c
	linsolqr.c linutils.c logrel.c logrelman.c model_reorder.c
	mps.c mtx_basic.c mtx_linal.c mtx_perms.c mtx_query.c
	mtx_reorder.c mtx_use_only.c mtx_vector.c
	rel.c relman.c
	slv.c slv0.c slv1.c slv2.c slv3.c slv6.c slv7.c
	slv8.c slv9.c slv9a.c slvDOF.c slv_common.c
	slv_interface.c slv_stdcalls.c system.c var.c
""")

solver_env = libascend_env.Copy()
if solver_env.get('WITH_MMIO'):
	solver_env.Append(CPPPATH=["#/mmio"])

defs = []
for i in libascend_env.get('WITH_SOLVERS'):
	solver_env.Append(CPPDEFINES=["STATIC_"+i])

objs = []

if solver_env.get('WITH_CONOPT'):
	solver_env.AppendUnique(CPPPATH=[solver_env.get('CONOPT_CPPPATH')])

	if solver_env.get('LINKED_CONOPT'):
		libascend_env.AppendUnique(
			LIBPATH=[solver_env.get('CONOPT_LIBPATH')]
			, LIBS=[solver_env.get('CONOPT_LIB')]
		)

	objs += solver_env.SharedObject('conopt.c')
#	print "BUILDING CONOPT.OS"

for c in csrcs:
	objs += solver_env.SharedObject(c)

#--------------------
# INSTALL

import glob

if libascend_env.get('CAN_INSTALL'):
	installdir = libascend_env['INSTALL_ROOT']+libascend_env['INSTALL_INCLUDE']+'/solver'

	headers = glob.glob("*.h")
	libascend_env.InstallHeader(installdir,headers)

Return('objs')

# vim: set syntax=python:

