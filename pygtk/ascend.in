#!@PYTHON@

import os.path, sys, platform

restart = 0

# this script handles restarting ascend if it's invoked without the full
# complement of env vars

if platform.system()=="Windows":
	SEP=";"
else:
	SEP=":"

if os.environ.get('LD_LIBRARY_PATH'):
	LD_LIBRARY_PATH = os.environ.get('LD_LIBRARY_PATH').split(SEP)
else:
	#LD_LIBRARY_PATH = ['/usr/local/lib']
	LD_LIBRARY_PATH = []

if not os.environ.get('ASC_GDB'):
	# restarting messes up GDB so don't allow it
	if "@INSTALL_LIB@"!="/usr/lib":
		
		if not "@INSTALL_LIB@" in LD_LIBRARY_PATH:
			LD_LIBRARY_PATH = ["@INSTALL_LIB@"] + LD_LIBRARY_PATH
			os.environ['LD_LIBRARY_PATH'] = SEP.join(LD_LIBRARY_PATH)
			restart = 1

	PYTHONPATH = os.environ.get("PYTHONPATH")
	if not PYTHONPATH:
		os.environ['PYTHONPATH'] = SEP.join(["@INSTALL_ASCDATA@"])
		restart = 1
	elif not "@INSTALL_ASCDATA@" in PYTHONPATH.split(SEP):
		os.environ['PYTHONPATH'] = SEP.join(["@INSTALL_ASCDATA@"] + PYTHONPATH.split(SEP))
		restart = 1

	if os.environ.get('ASCENDLIBRARY'):
		envmodels = [os.path.abspath(i) for i in os.environ['ASCENDLIBRARY'].split(SEP)]
		ascmodels = os.path.abspath("@INSTALL_ASCDATA@/models")
		if not ascmodels in envmodels:
			envmodels.append(ascmodels)
			os.environ['ASCENDLIBRARY'] = SEP.join(envmodels)
			restart = 1

	if restart:
		print "Restarting with corrected environment..."
		print "   LD_LIBRARY_PATH = %s" % os.environ.get('LD_LIBRARY_PATH')
		print "   PYTHONPATH = %s" % os.environ['PYTHONPATH']
		print "   ASCENDLIBRARY = %s" % os.environ.get('ASCENDLIBRARY')
		script = os.path.join(sys.path[0],"ascend")
		os.execv("@PYTHON@",[script] + sys.argv)


print "Running with..."
print "   LD_LIBRARY_PATH = %s" % os.environ.get('LD_LIBRARY_PATH')
print "   PYTHONPATH = %s" % os.environ.get('PYTHONPATH')
print "   argv = %s" % sys.argv

if os.environ.get('ASCENDLIBRARY'):
	ASCENDLIBRARY = os.environ.get('ASCENDLIBRARY')
	print "USING ASCENDLIBRARY=%s" % ASCENDLIBRARY
else:
	ASCENDLIBRARY = """@DEFAULT_ASCENDLIBRARY@"""

print "sys.path[0] = %s" % sys.path[0]

if not "@INSTALL_ASCDATA@" in sys.path:
	print "Where is @INSTALL_ASCDATA@?"
	sys.path.append("@INSTALL_ASCDATA@")

if os.environ.get('OSTYPE')=='cygwin':
	print "CYGWIN..."
elif os.environ.get('OSTYPE')=='msys':
	print "MSYS..."

if os.environ.get('ASC_GDB'):
	args = sys.argv
	args.pop(0)
	cmd = ["gdb","--args","python",os.path.join("@INSTALL_ASCDATA@","gtkbrowser.py")]+args
	print cmd
	os.execv("/usr/bin/gdb",cmd)
else:
	import ascpy
	from gtkbrowser import *
	B = Browser()
	B.run()
