#!@PYTHON@
# ^ python path substituted here is not depended upon in Windows

import os.path, sys, platform

restart = 0

# This script handles restarting ascend if it's invoked without the full
# complement of env vars. You can override values used by this script
# by setting the appropriate env vars before this script is run.

# Note that as well as env vars, ASCEND is also controllable using the 
# .ascend.ini file in the user's home directory.

#-----------------------------------------------------------------------
# Get locations of the installed files. On windows, these are defined in
# in the registry. On other systems, these are defined at compile time
# by @VARNAME@ substitution.

if platform.system()=="Windows":
	import _winreg as wreg
	k = wreg.OpenKey(wreg.HKEY_LOCAL_MACHINE, "SOFTWARE\ASCEND")
	print k

	# for some reason, QueryValue doesn't work on Py 2.4, need to use QueryValueEx.
	INSTALL_SOLVERS,t = wreg.QueryValueEx(k,"INSTALL_SOLVERS")
	INSTALL_MODELS,t = wreg.QueryValueEx(k,"INSTALL_MODELS")
	INSTALL_LIB,t = wreg.QueryValueEx(k,"INSTALL_LIB")
	INSTALL_ASCDATA,t = wreg.QueryValueEx(k,"INSTALL_ASCDATA")
	GTKLIBS,t = wreg.QueryValueEx(k,"GTKLIBS");
	DEFAULT_ASCENDLIBRARY="%s;%s" % (INSTALL_SOLVERS,INSTALL_MODELS)
	
	PYVERSION = "@PYVERSION@"
	
	PYTHON=os.path.join(sys.prefix,"pythonw.exe")
	
	print "PYTHON =",PYTHON
	SEP=";"
	LDPATHVAR = 'PATH'
else:
	INSTALL_LIB="@INSTALL_LIB@"
	INSTALL_ASCDATA="@INSTALL_ASCDATA@"
	PYTHON="@PYTHON@"
	DEFAULT_ASCENDLIBRARY="""@DEFAULT_ASCENDLIBRARY@"""
	SEP=":"
	LDPATHVAR = 'LD_LIBRARY_PATH'
	GTKLIBS = None # assume the GTK will be in the standard library path

#-----------------------------------------------------------------------

if os.environ.get(LDPATHVAR):
	LDPATH = os.environ.get(LDPATHVAR).split(SEP)
else:
	LDPATH = []

if not os.environ.get('ASC_GDB'):
	# restarting messes up GDB so don't allow it

	if platform.system()=="Windows":
		# Put INSTALL_LIB then GTK at start of path
		if GTKLIBS in LDPATH:
			LDPATH.remove(GTKLIBS)
		LDPATH=[INSTALL_LIB,GTKLIBS]+LDPATH
		os.environ[LDPATHVAR] = SEP.join(LDPATH)
		restart = 1

	elif INSTALL_LIB != "/usr/lib" and not INSTALL_LIB in LDPATH:
		# don't worry about GTK location; just ensure that LDPATH includes INSTALL_LIB
		LDPATH = [INSTALL_LIB] + LDPATH
		os.environ[LDPATHVAR] = SEP.join(LDPATH)
		restart = 1

	if os.environ.get('ASCENDLIBRARY'):
		envmodels = [os.path.abspath(i) for i in os.environ['ASCENDLIBRARY'].split(SEP)]
		ascmodels = os.path.abspath(INSTALL_ASCDATA+"/models")
		ascsolvers = os.path.abspath(INSTALL_ASCDATA+"/solvers")
		if not ascmodels in envmodels:
			envmodels.append(ascmodels)
			os.environ['ASCENDLIBRARY'] = SEP.join(envmodels)
			restart = 1
		if not ascsolvers in envmodels:
			envmodels.append(ascsolvers)
			os.environ['ASCENDLIBRARY'] = SEP.join(envmodels)
			restart = 1

	if restart:
		print "Restarting with corrected environment..."
		print "   %s = %s" % (LDPATHVAR,os.environ.get(LDPATHVAR))
		print "   ASCENDLIBRARY = %s" % os.environ.get('ASCENDLIBRARY')
		script = os.path.join(sys.path[0],"ascend")
		print "PYTHON =",PYTHON
		print "script =",script
		if platform.system()=="Windows":
			print "DROPPING THROUGH"
		else:
			os.execve(PYTHON,[script] + sys.argv, os.environ)
		

print "Running with..."
print "   %s = %s" % (LDPATHVAR, os.environ.get(LDPATHVAR))
print "   sys.path = %s" % sys.path
print "   argv = %s" % sys.argv

if os.environ.get('ASCENDLIBRARY'):
	ASCENDLIBRARY = os.environ.get('ASCENDLIBRARY')
	print "USING ASCENDLIBRARY=%s" % ASCENDLIBRARY
else:
	ASCENDLIBRARY = DEFAULT_ASCENDLIBRARY
	print "default ASCENDLIBRARY=%s" % ASCENDLIBRARY

print "sys.path[0] = %s" % sys.path[0]

if not INSTALL_ASCDATA in sys.path:
	print "Adding INSTALL_ASCDATA to python path?"
	sys.path.append(INSTALL_ASCDATA)

if os.environ.get('OSTYPE')=='cygwin':
	print "CYGWIN..."
elif os.environ.get('OSTYPE')=='msys':
	print "MSYS..."

if os.environ.get('ASC_GDB'):
	args = sys.argv
	args.pop(0)
	cmd = ["gdb","--args","python",os.path.join(INSTALL_ASCDATA,"gtkbrowser.py")]+args
	print cmd
	os.execv("/usr/bin/gdb",cmd)
else:
	import ascpy
	olddir = os.getcwd()
	os.chdir(INSTALL_ASCDATA)
	from gtkbrowser import *
	os.chdir(olddir)
	B = Browser(librarypath=ASCENDLIBRARY,assetspath=os.path.join(INSTALL_ASCDATA,"glade"))
	B.run()
