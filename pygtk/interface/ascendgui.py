#!/usr/bin/env python
# -*- coding: UTF8 -*-

# Python module ascendgui.py
# Autogenerated from ascend.glade
# Generated on Sun Nov 13 20:38:11 2005

# Warning: Do not modify any context comment such as #--
# They are required to keep user's code

import os

import gtk

from SimpleGladeApp import SimpleGladeApp
from SimpleGladeApp import bindtextdomain

app_name = "ascend"
app_version = "0.0.1"

glade_dir = ""
locale_dir = ""

bindtextdomain(app_name, locale_dir)


class Mainwin(SimpleGladeApp):

	def __init__(self, path="ascend.glade",
	             root="mainwin",
	             domain=app_name, **kwargs):
		path = os.path.join(glade_dir, path)
		SimpleGladeApp.__init__(self, path, root, domain, **kwargs)

	#-- Mainwin.new {
	def new(self):
		print "A new %s has been created" % self.__class__.__name__
	#-- Mainwin.new }

	#-- Mainwin custom methods {
	#   Write your own methods here
	#-- Mainwin custom methods }

	#-- Mainwin.on_mainwin_delete_event {
	def on_mainwin_delete_event(self, widget, *args):
		print "on_mainwin_delete_event called with self.%s" % widget.get_name()
	#-- Mainwin.on_mainwin_delete_event }

	#-- Mainwin.on_new1_activate {
	def on_new1_activate(self, widget, *args):
		print "on_new1_activate called with self.%s" % widget.get_name()
	#-- Mainwin.on_new1_activate }

	#-- Mainwin.on_open1_activate {
	def on_open1_activate(self, widget, *args):
		print "on_open1_activate called with self.%s" % widget.get_name()
	#-- Mainwin.on_open1_activate }

	#-- Mainwin.on_save1_activate {
	def on_save1_activate(self, widget, *args):
		print "on_save1_activate called with self.%s" % widget.get_name()
	#-- Mainwin.on_save1_activate }

	#-- Mainwin.on_save_as1_activate {
	def on_save_as1_activate(self, widget, *args):
		print "on_save_as1_activate called with self.%s" % widget.get_name()
	#-- Mainwin.on_save_as1_activate }

	#-- Mainwin.on_quit1_activate {
	def on_quit1_activate(self, widget, *args):
		# print "on_quit1_activate called with self.%s" % widget.get_name()
		self.quit();
	#-- Mainwin.on_quit1_activate }

	#-- Mainwin.on_cut1_activate {
	def on_cut1_activate(self, widget, *args):
		print "on_cut1_activate called with self.%s" % widget.get_name()
	#-- Mainwin.on_cut1_activate }

	#-- Mainwin.on_copy1_activate {
	def on_copy1_activate(self, widget, *args):
		print "on_copy1_activate called with self.%s" % widget.get_name()
	#-- Mainwin.on_copy1_activate }

	#-- Mainwin.on_paste1_activate {
	def on_paste1_activate(self, widget, *args):
		print "on_paste1_activate called with self.%s" % widget.get_name()
	#-- Mainwin.on_paste1_activate }

	#-- Mainwin.on_delete1_activate {
	def on_delete1_activate(self, widget, *args):
		print "on_delete1_activate called with self.%s" % widget.get_name()
	#-- Mainwin.on_delete1_activate }

	#-- Mainwin.on_about1_activate {
	def on_about1_activate(self, widget, *args):
		# print "on_about1_activate called with self.%s" % widget.get_name()
		Aboutwin()
	#-- Mainwin.on_about1_activate }


class Aboutwin(SimpleGladeApp):

	def __init__(self, path="ascend.glade",
	             root="aboutwin",
	             domain=app_name, **kwargs):
		path = os.path.join(glade_dir, path)
		SimpleGladeApp.__init__(self, path, root, domain, **kwargs)

	#-- Aboutwin.new {
	def new(self):
		print "A new %s has been created" % self.__class__.__name__
	#-- Aboutwin.new }

	#-- Aboutwin custom methods {
	#   Write your own methods here
	#-- Aboutwin custom methods }

	#-- Aboutwin.on_aboutwin_delete_event {
	def on_aboutwin_delete_event(self, widget, *args):
		print "on_aboutwin_delete_event called with self.%s" % widget.get_name()
		self.Aboutwin.destroy()
	#-- Aboutwin.on_aboutwin_delete_event }

	#-- Aboutwin.on_close_clicked {
	def on_close_clicked(self, widget, *args):
		print "on_close_clicked called with self.%s" % widget.get_name()
		self.destroy()
	#-- Aboutwin.on_close_clicked }


class Errorwin(SimpleGladeApp):

	def __init__(self, path="ascend.glade",
	             root="errorwin",
	             domain=app_name, **kwargs):
		path = os.path.join(glade_dir, path)
		SimpleGladeApp.__init__(self, path, root, domain, **kwargs)

	#-- Errorwin.new {
	def new(self):
		print "A new %s has been created" % self.__class__.__name__
	#-- Errorwin.new }

	#-- Errorwin custom methods {
	#   Write your own methods here
	#-- Errorwin custom methods }


class Menu8(SimpleGladeApp):

	def __init__(self, path="ascend.glade",
	             root="menu8",
	             domain=app_name, **kwargs):
		path = os.path.join(glade_dir, path)
		SimpleGladeApp.__init__(self, path, root, domain, **kwargs)

	#-- Menu8.new {
	def new(self):
		print "A new %s has been created" % self.__class__.__name__
	#-- Menu8.new }

	#-- Menu8 custom methods {
	#   Write your own methods here
	#-- Menu8 custom methods }

	#-- Menu8.on_copy2_activate {
	def on_copy2_activate(self, widget, *args):
		print "on_copy2_activate called with self.%s" % widget.get_name()
	#-- Menu8.on_copy2_activate }

	#-- Menu8.on_clear_all1_activate {
	def on_clear_all1_activate(self, widget, *args):
		print "on_clear_all1_activate called with self.%s" % widget.get_name()
	#-- Menu8.on_clear_all1_activate }


#-- main {

def main():
	mainwin = Mainwin()
	#aboutwin = Aboutwin()
	#errorwin = Errorwin()
	menu8 = Menu8()

	mainwin.run()

if __name__ == "__main__":
	main()

#-- main }
