#  Top Level Ascend Makefile
#  Ben Allan June 25, 1994.
#  $Revision: 1.1 $
#  $Date: 1997/07/29 19:44:37 $
#  $Author: mthomas $
#  $Source: /afs/cs.cmu.edu/project/ascend/Repository/ascend4/Makefile.vc,v $
#


SHELL = /bin/sh

builddir = .
srcdir = 
VPATH = 

INCMAKE = $(builddir)\ConfigAscend.vc
!include $(INCMAKE)


ASCEND_SUBDIRS   = utilities general compiler packages solver interface
ASC_TK_SUBDIRS   = TK
MODELS_SUBDIRS   = models
HELP_SUBDIRS     = help
SUPPORT_SUBDIRS  = $(ASC_TK_SUBDIRS) $(MODELS_SUBDIRS) $(HELP_SUBDIRS)
EXTERNAL_SUBDIRS = 
SUBDIRS          = $(ASCEND_SUBDIRS) $(SUPPORT_SUBDIRS) $(EXTERNAL_SUBDIRS)


ascend: support_libs all_libs GUI

z_notify:
	zwrite -d -q -i make $(USER) -m Your build on `hostname` is complete.

support_libs: \
	$(BLASLIB) \
	$(LPAKLIB) \
	$(LSODLIB) \
	$(CONOPTLIB) \
	$(MINOSLIB)

all_libs: utilities.lib general.lib ascend.lib packages.lib solver.lib \
	ascendif.lib

ascend4: support_libs all_libs
	cd interface
	$(MAKE) -f Makefile.vc ascend4.exe

ascend4p: support_libs all_libs
	cd interface
	$(MAKE) -f Makefile.vc ascend4p.exe

ascend4q: support_libs all_libs
	cd interface
	$(MAKE) -f Makefile.vc ascend4q.exe

GUI:
	cd interface
	$(MAKE) -f Makefile.vc ascend4.exe

utilities.lib:
	cd utilities
	$(MAKE) -f Makefile.vc utilities.lib

general.lib:
	cd general
	$(MAKE) -f Makefile.vc general.lib

ascend.lib:
	cd compiler
	$(MAKE) -f Makefile.vc ascend.lib

packages.lib:
	cd packages
	$(MAKE) -f Makefile.vc packages.lib

solver.lib:
	cd solver
	$(MAKE) -f Makefile.vc solver.lib

ascendif.lib:
	cd interface
	$(MAKE) -f Makefile.vc ascendif.lib

blas $(BLASLIB): 

lpak $(LPAKLIB): 

lsod $(LSODLIB): 

conopt $(CONOPTLIB): 

minos $(MINOSLIB): 

make-blaslib:
	cd ..\blas
	$(MAKE) -f Makefile.vc libascblas.lib

make-lpaklib:
	cd ..\linpack
	$(MAKE) -f Makefile.vc libasclpak.lib

make-lsodlib:
	cd ..\lsod
	$(MAKE) -f Makefile.vc libinteg.lib

make-conoptlib:
	cd ..\conopt
	$(MAKE) -f Makefile.vc libconopt.lib

make-minoslib:
	cd ..\minos54
	$(MAKE) -f Makefile.vc libminos54.lib

makes:
	cd .. 
	.\config.status

save-makes:
	-@for i in $(SUBDIRS) /dev/null ; do \
		if test $$i != "/dev/null" ; then \
			(cd $$i ; $(MAKE) -f Makefile.vc save-makes) ; \
		fi ; \
	done
	-$(CP) Makefile Makefile.SAVED
	-$(CP) ConfigAscend ConfigAscend.SAVED
	-$(CP) Makefile.Rules Makefile.Rules.SAVED



install: 
	-@for i in $(SUBDIRS) /dev/null ; do \
		if test $$i != "/dev/null" ; then \
			(cd $$i ; $(MAKE) -f Makefile.vc install) ; \
		fi ; \
	done
	$(INSTALL_PROGRAM) ascend-sh $(BIN_DIR)\ascend

install-binaries:
	-for i in $(SUBDIRS) /dev/null ; do \
		if test $$i != "/dev/null" ; then \
			(cd $$i ; $(MAKE) -f Makefile.vc install-binaries) ; \
		fi ; \
	done

install-libraries:
	-for i in $(SUBDIRS) /dev/null ; do \
		if test $$i != "/dev/null" ; then \
			(cd $$i ; $(MAKE) -f Makefile.vc install-libraries) ; \
		fi ; \
	done

install-man:
	-for i in $(SUBDIRS) /dev/null ; do \
		if test $$i != "/dev/null" ; then \
			(cd $$i ; $(MAKE) -f Makefile.vc install-man) ; \
		fi ; \
	done

install-TK:
	cd $(ASC_TK_SUBDIRS)
	$(MAKE) -f Makefile.vc install-TK

install-models:
	cd $(MODELS_SUBDRIS)
	$(MAKE) -f Makefile.vc install-models

install-help:
	cd $(HELP_SUBDIRS)
	$(MAKE) -f Makefile.vc install-help

uninstall:
	-@for i in bin lib TK $(SUPPORT_SUBDIRS) /dev/null ; do \
		if test $$i != "/dev/null" ; then
			(cd $$i ; $(MAKE) -f Makefile.vc uninstall) ; \
		fi ; \
	done



clean mostlyclean reallyclean:
	-@for i in $(SUBDIRS) /dev/null ; do \
		if test $$i != "/dev/null" ; then \
			(cd $$i ; $(MAKE) -f Makefile.vc clean) ; \
		fi ; \
	done

distclean:
	-@for i in $(SUBDIRS) archive bin lib /dev/null ; do \
		if test $$i != "/dev/null" ; then \
			(cd $$i ; $(MAKE) -f Makefile.vc distclean) ; \
		fi ; \
	done
	-$(RM) Makefile Makefile.SAVED ConfigAscend ConfigAscend.SAVED \
		Makefile.Rules Makefile.Rules.SAVED TAGS tags *~ \#* *.bak \
		../config.status ../config.cache ../config.log



#  Targets to generate or remove dependency information.  `nodepend'
#  removes dependency information, `depend' generates dependency
#  information, and `depend-nosys' generates dependency information but
#  leaves out dependencies on system header files.

nodepend:
	-@for i in $(ASCEND_SUBDIRS) /dev/null ; do \
		if test $$i != "/dev/null" ; then \
			(cd $$i ; $(MAKE) -f Makefile.vc nodepend) ; \
		fi ; \
	done

depend-nosys depend-no-sys:
	-@for i in $(ASCEND_SUBDIRS) /dev/null ; do \
		if test $$i != "/dev/null" ; then \
			(cd $$i ; $(MAKE) -f Makefile.vc depend-nosys) ; \
		fi ; \
	done

depend:
	-@for i in $(ASCEND_SUBDIRS) /dev/null ; do \
		if test $$i != "/dev/null" ; then \
			(cd $$i ; $(MAKE) -f Makefile.vc depend) ; \
		fi ; \
	done
