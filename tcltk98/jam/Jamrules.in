#
# Jamrules support file for building Ascend4
# (see http://www.freetype.org/jam/index.html)
#
# This file is part of the Ascend Build System.
#
# Copyright (C) 2004  Jerry D. St.Clair
#
# The Ascend Build System is free software; you can redistribute
# it and/or modify it under the terms of the GNU General Public 
# License as published by the Free Software Foundation; either 
# version 2 of the License, or (at your option) any later version.
#
# This program is distributed in hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with the program; if not, write to the Free Software 
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139 USA.  
# Check the file named COPYING.
#---------------------------------------------------------------------------
#
# UNDER CONSTRUCTION
#
# This is a template Jamrules file which supports building the
# Tcl/Tk version of the Ascend modeling system, as well as a static
# library of Tcl/Tk interface functionality. The Ascend jam build 
# system currently supports building the libraries using the MSVC, 
# Borland, MinGW, and Watcom compilers.
#
# INSTALLATION IS NOT WORKING IN THE CURRENT VERSION.
#
# It is not currently customized by the Ascend configure mechanism,
# although this may be implemented in the future.
#
# Users should copy/rename this file to 'Jamrules', then modify
# the settings manually for their particular system.  Ascend
# cannot be built by jam unless the Jambase file is present.
#
# User-customized Jamrules files should not be placed in version
# control.  Only the Jamrules.in template should be versioned.
#
#---------------------------------------------------------------------------

# root directory for installation
prefix =  c:\\dev ;
INSTALL_ROOT = $(prefix)$(SLASH)Ascend4_install ;

# name of the builder of the executable (in double quotes) 
BUILD_CREDIT = "anonymous" ;
                                 
# Root dir of Ascend base library sources.
ASC_BASE_ROOT = ..$(SLASH)..$(SLASH)base$(SLASH)generic ;

# Root dir of Ascend libraries - will be qualified for compiler & build type
ASC_BASE_LIBDIR = ..$(SLASH)..$(SLASH)base$(SLASH)jam ;

# root directories for Tcl and Tk libraries
TCL_DIR = ..$(SLASH)..$(SLASH)..$(SLASH)Tcl ;
TK_DIR  = $(TCL_DIR) ;

# Set the Tcl/Tk/tkTable import library names here to override the
# default, compiler-specific names.  Comment out to use defaults.
# TCL_LIBRARY = tcl80$(SUFLIB) ;
# TK_LIBRARY  = tk80$(SUFLIB) ;
# TKTABLE_LIB = tkTable$(SUFLIB) ;

EXE_NAME = Ascend4 ;
ASC_TCLTK98_LIBNAME = libasc_tcltk98 ;
ASC_TCLTK98_LIB     = $(ASC_TCLTK98_LIBNAME)$(SUFLIB) ;

# Install directories - comment to not install that class of file
INSTALL_BIN_DIR     = $(INSTALL_ROOT)$(SLASH)ascend4$(SLASH)bin ;
INSTALL_DOC_DIR     = $(INSTALL_ROOT)$(SLASH)ascend4$(SLASH)doc ;
INSTALL_MODELS_DIR  = $(INSTALL_ROOT)$(SLASH)ascend4$(SLASH)models ;
INSTALL_ASC_TK_DIR  = $(INSTALL_ROOT)$(SLASH)ascend4$(SLASH)Tk ;
INSTALL_USER_DIR    = $(INSTALL_ROOT)$(SLASH)ascend4$(SLASH)user_models ;
INSTALL_TCL_DIR     = $(INSTALL_ROOT)$(SLASH)Tcl ;

# Locations of pre-built install files
ASC_DOC_DIR    = ;
ASC_MODELS_DIR = ..$(SLASH)..$(SLASH)models ;
ASC_TK_DIR     = ..$(SLASH)TK ;

ASC_BASE_LIBS =
  $(ASC_BASE_LIBDIR)$(SLASH)$(BUILD_SUBDIR)$(SLASH)$(ASC_COMPILER_LIB)
  $(ASC_BASE_LIBDIR)$(SLASH)$(BUILD_SUBDIR)$(SLASH)$(ASC_GENERAL_LIB)
  $(ASC_BASE_LIBDIR)$(SLASH)$(BUILD_SUBDIR)$(SLASH)$(ASC_SOLVER_LIB)
  $(ASC_BASE_LIBDIR)$(SLASH)$(BUILD_SUBDIR)$(SLASH)$(ASC_UTILITIES_LIB)
  $(ASC_BASE_LIBDIR)$(SLASH)$(BUILD_SUBDIR)$(SLASH)$(ASC_PACKAGES_LIB)
  ;

#======================================================================
# FORTRAN options - set to override compiler defaults
#
#  Your FORTRAN compiler
#FORTRAN = g77 ;

#  Fortran compilation flags & options:
#  These are used for making the ASCEND libraries based on FORTRAN codes.
#  These should be set to get the best performance possible out of your
#  f77 compiler without optimizing away functions that are not obviously
#  called, as some compilers do by default.
#
#FORTRANFLAGS = -c -I4 -O -lg2c ;

#  F77LIBS is for the base f77 libraries. If you are linking no f77
#  objects to ascend, it may be left undefined.
#  Set F77LIBS appropriate for your machine and desired loader behavior.
#
#F77_LIBS = ;

#======================================================================
# FORTRAN LIBRARIES
#
# Point BLASLIB and LPAKLIB to machine-specific BLAS and LINPACK
# libraries (if you have them) to get the best speed out of ASCEND.
# Otherwise, generic versions can be built if FORTRAN is available.
#======================================================================

# path to the lsode library - will be built if == 'libasc_lsode'
#LSODLIB = libasc_lsode$(SUFLIB) ;

# path to the blas library - will be built if == 'libasc_blas'
#BLASLIB = libasc_blas$(SUFLIB) ;

# path to the linpack library - will be built if == 'libasc_lpak'
#LPAKLIB = libasc_lpak$(SUFLIB) ;

FOR_LIBS = $(LSODLIB) $(MINOSLIB) $(CONOPTLIB) $(LPAKLIB) $(BLASLIB) $(F77_LIBS) ;

#======================================================================
# PACKAGES
#
# Package settings for building Ascend.
# Packages are bits of compiled code that represent models, or solvers,
# or, in general, any bits of external code.
#
# Choose one of the following, comment out the others:
#     STATIC_PACKAGES   packages should be statically linked/loaded
#     DYNAMIC_PACKAGES  packages should be dynamically linked/loaded
#     NO_PACKAGES       no packages
#
# If STATIC_PACKAGES are chosen, also indicate the location of
# the packages in PACK_LIBS.  Otherwise leave PACK_LIBS empty.
#======================================================================
HAVE_PACKAGES = STATIC_PACKAGES ;
#HAVE_PACKAGES = DYNAMIC_PACKAGES ;
#HAVE_PACKAGES = NO_PACKAGES ;

PACK_LIBS = $(ASCLIB_PKG)$(SUFLIB) ;
#PACK_LIBS = ;

#======================================================================
# TCL / TK
#
# Set the location of the Tcl/Tk import libraries and include files.
# The order should be -ltk -ltcl
#
# We also need the TkTable widget which does not come as a
# standard part of the Tcl/Tk distribution.  This library can
# either be loaded statically or dynamically.
#
# If TK_LIBS and TK_HDRS are not properly set, ASCEND cannot build.
#======================================================================
TCL_LIB_DIR     ?= $(TCL_DIR)$(SLASH)lib ;
TK_LIB_DIR      ?= $(TK_DIR)$(SLASH)lib ;
TKTABLE_LIB_DIR ?= $(TCL_DIR)$(SLASH)lib ;

if $(NT)
{
  if ($(BCCROOT) || ($(TOOLSET) = BORLANDC))
  {
    TCL_LIBRARY ?= tcl80_bc$(SUFLIB) ;
    TK_LIBRARY  ?= tk80_bc$(SUFLIB) ;
    TKTABLE_LIB ?= tkTable_bc$(SUFLIB) ;
  }
  else if $(MSVCNT) || $(TOOLSET) = VISUALC)
  {
    TCL_LIBRARY ?= tcl80$(SUFLIB) ;
    TK_LIBRARY  ?= tk80$(SUFLIB) ;
    TKTABLE_LIB ?= tkTable$(SUFLIB) ;
  }
  else if $(MINGW) || $(TOOLSET) = MINGW)
  {
    TCL_LIBRARY ?= libtcl80$(SUFLIB) ;
    TK_LIBRARY  ?= libtk80$(SUFLIB) ;
    TKTABLE_LIB ?= libtkTable$(SUFLIB) ;
  }
  else if $(WATCOM) || $(TOOLSET) = WATCOM)
  {
    TCL_LIBRARY ?= tcl80_wat$(SUFLIB) ;
    TK_LIBRARY  ?= tk80_wat$(SUFLIB) ;
    TKTABLE_LIB ?= tkTable_wat$(SUFLIB) ;
  }
}
else if $(OS) = LINUX
{
    TCL_LIBRARY ?= libtcl80$(SUFLIB) ;
    TK_LIBRARY  ?= libtk80$(SUFLIB) ;
    TKTABLE_LIB ?= libtkTable$(SUFLIB) ;
}
else
{
    TCL_LIBRARY ?= tcl80$(SUFLIB) ;
    TK_LIBRARY  ?= tk80$(SUFLIB) ;
    TKTABLE_LIB ?= tkTable$(SUFLIB) ;
}

SEARCH on $(TCL_LIBRARY) = $(TCL_LIB_DIR) ;
SEARCH on $(TK_LIBRARY) = $(TK_LIB_DIR) ;
SEARCH on $(TKTABLE_LIB) = $(TKTABLE_LIB_DIR) ;
LOCATE on $(TCL_LIBRARY) = $(TCL_LIB_DIR) ;
LOCATE on $(TK_LIBRARY) = $(TK_LIB_DIR) ;
LOCATE on $(TKTABLE_LIB) = $(TKTABLE_LIB_DIR) ;

#  The tcl and tk library files
TK_LIBS     = $(TK_LIBRARY) $(TCL_LIBRARY) ;

#  Location of the tcl.h and tk.h header files
TK_HDRS     = $(TK_DIR)$(SLASH)include ;

# Uncomment to copy Tcl/Tk dynamic libraries to install bin directory
INSTALL_TCLTK_LIBS = 1 ;

# TclTk dynamic libraries to install to bin directory
TCL_LIBS_TO_INSTALL = tcl80 tclpip80 Tcl1680 Cw3215mt ;
TK_LIBS_TO_INSTALL  = tk80 ;

