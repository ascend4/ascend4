(*
	This is a test of the integrator_ida_write_matrix function that will output
	a MatrixMarket file for dF/dy and dF/dy' for the following system. We want
	to check that those matrices make sense.
*)
REQUIRE "ivpsystem.a4l";
REQUIRE "atoms.a4l";

MODEL writematrix;
	x[1,2] IS_A solver_var;
	dx_dt[1,2] IS_A solver_var;
	t IS_A time;

	3*dx_dt[1] = 4*x[1] - x[2];
	5*dx_dt[2] = 7*x[1];

METHODS
	METHOD ode_init;
		FOR i IN [1,2] DO
			dx_dt[i].ode_id := i;
			x[i].ode_id := i;
			dx_dt[i].ode_type := 2;
			x[i].ode_type := 1;
		END FOR;
		x[1..2].obs_id := 1;
		t.ode_type := -1;
	END ode_init;
	METHOD values;
		x[1] := 3;
		x[2] := 100;
	END values;		
	METHOD on_load;
		RUN reset;
		RUN default_self;
		RUN values;
		RUN ode_init;
	END on_load;
END writematrix;

(*
	This model tests the ida_write_matrix function for a system that includes
	two algebraic equations and one differential equation
*)
MODEL writematrix2;
	rho IS_A solver_var;
	v IS_A solver_var;
	w IS_A solver_var;
	drho_dt IS_A solver_var;
	t IS_A time;

	difeq: drho_dt + v * rho = 0;
	algeq: 100 * v + rho = 0;
	alg2: v + w*v = 1000;

METHODS
	METHOD ode_init;
		drho_dt.ode_id := 1;
		rho.ode_id := 1;
		drho_dt.ode_type := 2;
		rho.ode_type := 1;
		rho.obs_id := 1;
		t.ode_type := -1;
	END ode_init;
	METHOD values;
		v := 10;
		w := 0.1;	
		rho := 7;
	END values;		
	METHOD on_load;
		RUN reset;
		RUN default_self;
		RUN values;
		RUN ode_init;
	END on_load;
END writematrix2;
