(*********************************************************************\
                        flowsheet.asc
                        by Joseph J. Zaher
                        Part of the Ascend Library

This file is part of the Ascend modeling library.

Copyright (C) 1994

The Ascend modeling library is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 2 of the
License, or (at your option) any later version.

The Ascend Language Interpreter is distributed in hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

This module <does>
Use of this module is demonstrated by the associated script file
flowsheet.s.
\*********************************************************************)

(*********************************************************************\
  $Date: 1997/02/20 18:54:15 $
  $Revision: 1.5 $
  $Author: mthomas $
  $Source: /afs/cs.cmu.edu/project/ascend/Repository/models/examples/flowsheet.asc,v $
\*********************************************************************)
(**
 **
 **  F  L  O  W  S  H  E  E  T  .  A  S  C
 **  ----------------------------------------------------
 **
 **  A listing of exemplary ASCEND models for performing 
 **  flowsheet simulation calculations using the flowsheet
 **  library.
 **
 **  Joseph J. Zaher
 **  04/94
 **
 **)


(* REQUIRE flowsheet.lib *)

MODEL flash_test;

    unit                                    IS_A flash;
    unit.inputs                             :== ['side'];
    unit.feed['side'].state                 IS_REFINED_TO UNIFAC_mixture;
    unit.feed['side'].state.components      :== ['C3H6O', 'nC6H14'];
    unit.feed['side'].state.data['C3H6O']   IS_REFINED_TO acetone;
    unit.feed['side'].state.data['nC6H14']  IS_REFINED_TO n_hexane;
    unit.product['top'].state               IS_REFINED_TO Pitzer_mixture;
    unit.product['bottom'].state            IS_REFINED_TO UNIFAC_mixture;
    unit.state                              IS_REFINED_TO equilibrium_mixture; 

    METHODS
        METHOD values;
            unit.feed['side'].state.T := 293.15{K};
            unit.feed['side'].state.P := 250.0{mmHg};
            unit.feed['side'].state.y['C3H6O'] := 0.5;
            unit.feed['side'].state.y['nC6H14'] := 0.5;
            unit.feed['side'].F := 100.0{g_mole/s};
            unit.state.phi['liquid'] := 0.5;
            unit.state.P := 250.0{mmHg};
        END values;
        METHOD clear;
            RUN unit.clear;
        END clear;
        METHOD specify;
            RUN unit.specify;
        END specify;
        METHOD reset;
            RUN clear;
            RUN specify;
        END reset;

END flash_test;







