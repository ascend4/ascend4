(*
Model of a parabolic trough solar thermal collector field, of the type
of SEGS VI plant, closely following the approach of Patnode (2006).
https://www.nrel.gov/analysis/sam/pdfs/thesis_patnode06.pdf

First ASCEND version by Vikram Kaadam (2011), with revisions by 
John Pye (2012).
*)

REQUIRE "atoms.a4l";
REQUIRE "solar/solar_types.a4l";

REQUIRE "johnpye/thermo_types.a4c";
REQUIRE "johnpye/sunpos.a4c";

MODEL sunpos_wrapper REFINES sunpos;
		
	beta = 1.0 * theta_z;

METHODS
	METHOD specify;
		FIX L_st, L_loc, phi; (* time and location *)
		FIX gamma; (* surface orientation *)
		FIX t;			
	END specify;

	METHOD values;
		(* there should be something here?? *)
	END values;

	METHOD self_test;
		ASSERT abs(theta-35.0{deg}) < 0.15{deg};
		ASSERT abs(delta-(-13.80{deg})) < 0.02{deg};
	END self_test;		
END sunpos_wrapper;


(*
	Heat absorbed by the solar receiver of cylindrical shape
*) 
MODEL Qabsorbed;

(* Variables *) 

	value      IS_A intensity; (* Solar radiation absorbed by the receiver tubes *)
	DNI        IS_A intensity; (* Direct normal insolation *)
	DST        IS_A time;      (* Daylight savings time adjustment (1 hr during daylight savings time, else 0)  *) 
	IAM        IS_A factor;    (* Incidence angle modifier *) 
	row_shadow IS_A factor;    (* Row shadow factor *) 
	(* Weff    IS_A distance;     Effective unshaded width of mirror aperture *) 
	W          IS_A distance;  (* Collector aperture width *) 
	L_spacing  IS_A distance;  (* Length of spacing between troughs *) 
	end_loss   IS_A factor;    (* End loss for the heat collecting elements- HCE *) 
	F          IS_A distance;  (* Focal length of the collectors *) 

	L_sca      IS_A distance;  (* Length of single solar collector assembly *) 
	eta_field  IS_A fraction;  (* Field efficiency *) 
	eta_HCE    IS_A fraction;  (* Number of HCE types in the field *) 
	avail_SF   IS_A fraction;  (* Fraction of solar field which is operable and tracking the sun *) 

	sun        IS_A sunpos_wrapper; (* Sun position calculation *)

(* interconnections *)
	t_std ALIASES sun.t;
	
	value = DNI * cos(sun.theta) * IAM * row_shadow * end_loss * eta_field * eta_HCE * avail_SF;
	IAM = 1 + 8.84e-4 * (sun.theta/cos(sun.theta)) - 5.369e-5 * (sun.theta^2)/cos(sun.theta);	
	(* row_shadow = Weff / W; *)
	row_shadow = (L_spacing/W) * (cos(sun.theta_z)/cos(sun.theta));	
	end_loss = 1 - F * tan(sun.theta) / L_sca;

METHODS
	METHOD specify;
		FIX DNI, sun.L_st, sun.L_loc, DST, t_std, L_spacing;
		FIX W, F, L_sca, eta_field, eta_HCE, avail_SF;
		RUN sun.specify;
	END specify;	

	METHOD values;		
		IF (t_std > 12{hour}) THEN
			sun.gamma := 90{deg};
		END IF;
		IF (t_std <= 12{hour}) THEN
			sun.gamma := -90{deg};
		END IF;

		DNI := 60 {W/m^2};
		sun.L_st := -105 {deg};
		sun.L_loc := -110 {deg};
		DST := 0 {hour};
		t_std := 15 {hour};
		L_spacing := 15 {m};
		W := 5 {m};
		F := 5 {m};
		L_sca := 50 {m};
		eta_field := 0.857;
		eta_HCE := 0.832;
		avail_SF := 1;
		sun.phi := 37.21 {deg};

		(* initial guesses  *) 
		value := 100 {W/m^2};
	END values;

	METHOD on_load;
		RUN specify;
		RUN values;
	END on_load;	
END Qabsorbed;


(*
	Heat loss per metre for the field
*) 
MODEL HeatLossField;

(* Variables *) 

	DNI IS_A intensity;   (* Direct normal insolation *) 
	Ti IS_A temperature;  (* Input temperature to the field, degC *) 
	T_o IS_A temperature;  (* Output temperature from the field, degC *) 
	
	type IS_A variable;
	HCEfra IS_A fraction;  (* The fraction of HCE type in the field *) 

	a0 IS_A solver_var;
	a1 IS_A solver_var;
	a2 IS_A solver_var;
	a3 IS_A solver_var;
	b0 IS_A solver_var;
	b1 IS_A solver_var;
	
	Q_loss_field IS_A energy_per_length;  

	(* Equation *) 
	
	Q_loss_field * (T_o-Ti) = HCEfra * (a0*(T_o-Ti) + (a1/2)*(T_o^2 - Ti^2) + (a2/3)*(T_o^3 - Ti^3) + (a3/4)*(T_o^4 - Ti^4) * DNI*(b0*(T_o-Ti) + (b1/3)*(T_o^3 - Ti^3)));

METHODS	
	METHOD specify;		
		FIX a0;
		FIX a1;
		FIX a2;
		FIX a3;
		FIX b0;
		FIX b1;

		FIX DNI;
		FIX Ti;			
	END specify;

	METHOD values;		
		DNI := 60 {W/m^2};
		Ti := 30 {K};

		IF (type == 1) THEN
			(*  air  *) 
			a0 := -2.247372E+01 {W/m^2};
			a1 :=  8.374490E-01 {W/m^2/K};
			a2 :=  0.00         {W/m^2/K^2};
			a3 :=  4.620143E-06 {W/m^2/K^3};
			b0 :=  6.983190E-02	{m};
			b1 :=  9.312703E-08 {m/K^2};
		END IF;

		IF (type == 2) THEN
			(*  vacuum  *) 
			a0 := -2.247372E+01 {W/m^2};
			a1 :=  8.374490E-01 {W/m^2/K};
			a2 :=  0.00         {W/m^2/K^2};
			a3 :=  4.620143E-06 {W/m^2/K^3};
			b0 :=  6.983190E-02	{m};
			b1 :=  9.312703E-08 {m/K^2};
		END IF;

		IF (type == 3) THEN
			(*  hydrogen  *) 
			a0 := -2.247372E+01 {W/m^2};
			a1 :=  8.374490E-01 {W/m^2/K};
			a2 :=  0.00         {W/m^2/K^2};
			a3 :=  4.620143E-06 {W/m^2/K^3};
			b0 :=  6.983190E-02	{m};
			b1 :=  9.312703E-08 {m/K^2};
		END IF;
	END values;		
END HeatLossField;

(*
	T_o calculate Q collected by the solar field in W/m2
*) 
MODEL Qcollected;
	
	(*  variables  *) 
    field_types IS_A set OF symbol_constant;
    field_types :== ['air','vacuum','hydrogen'];

	DNI IS_A intensity;
	
	Ti IS_A temperature;        (* Input temperature to the field, degC *) 
	T_o IS_A temperature;       (* Output temperature from the field, degC *) 
	T_amb IS_A temperature;     (* Ambient temperature, degC *) 
	
	width IS_A distance;	    (* Width of mirror aperure, m *) 
	
	Q_loss_recv IS_A intensity; (* Receiver heat loss, W/m2 *) 
	Q_loss_pipe IS_A intensity; (* Solar field piping heat loss, W/m2 *) 
	
	value IS_A intensity;
	DT IS_A delta_temperature;

	rho_i IS_A mass_density;
	h_i IS_A specific_enthalpy;
	h_o IS_A specific_enthalpy;
		
	dh_field IS_A specific_enthalpy;
	
	L_sca IS_A distance;      (* Length of single solar collector assembly, m *) 
	eta_SCA IS_A factor;      (* Number of solar collector assemblies in the field *) 
	Vdot_HTF IS_A volume_rate;
	
	(*  parts  *)
	Qabs IS_A Qabsorbed;
	hlfield[field_types] IS_A HeatLossField;
		
	(*  interconnecting  *)  (* Annulus types- air, vacuum, hydrogen *) 
    T_o, hlfield[field_types].T_o ARE_THE_SAME;
    DNI, Qabs.DNI ARE_THE_SAME;
    L_sca, Qabs.L_sca ARE_THE_SAME;

	(*  equations  *)
	Q_loss_recv * width = SUM[hlfield[field_types].Q_loss_field];
	T_amb + DT = 0.5 * (T_o + Ti);
	Q_loss_pipe = 0.01693{W/m^2/K}*DT - 0.0001683{W/m^2/K^2}*(DT^2) + 0.78e-7{W/m^2/K^3}*(DT^3);	
	value = Qabs.value - (Q_loss_recv + Q_loss_pipe);
	rho_i = 1074.0{kg/m^3} - 0.6367{kg/m^3/K}*Ti - 0.0007762{kg/m^3/K^2}*Ti^2;
	dh_field * (Vdot_HTF * rho_i) = value * width * L_sca * eta_SCA;
	h_i = 1000{m^2/s^2} * (-18.34 + 1.498{1/K}*Ti + 0.001377{1/K^2}*Ti^2);
	h_o = 1000{m^2/s^2} * (-18.34 + 1.498{1/K}*T_o + 0.001377{1/K^2}*T_o^2);
	dh_field = abs(h_i - h_o);
	
	
METHODS
	METHOD specify;
		FIX DNI;
		FIX Ti;
		FIX T_amb;			
		FIX width;
		FIX L_sca;
		FIX eta_SCA;
		FIX Vdot_HTF;
		FIX hlfield[field_types].HCEfra;
		FIX hlfield[field_types].type;

		RUN hlfield[field_types].specify;			
		RUN Qabs.specify;
	END specify;

	METHOD values;
		DNI := 60 {W/m^2};
		Ti := 60{K};
		T_amb := 30{K};

		width := 5{m};
		L_sca := 50 {m};
		eta_SCA := 256;
		Vdot_HTF := 400{m^3/hour};

		hlfield['air'].type := 1;
		hlfield['vacuum'].type := 2;
		hlfield['hydrogen'].type := 3;

		hlfield['air'].HCEfra := 1.0;
		hlfield['vacuum'].HCEfra := 0.0;
		hlfield['hydrogen'].HCEfra := 0.0;

		Qabs.sun.L_st := -105 {deg};
		Qabs.sun.L_loc := -110 {deg};
		Qabs.DST := 0 {hour};
		Qabs.sun.phi := 37.21 {deg};
		Qabs.t_std := 15 {hour};
		Qabs.L_spacing := 15 {m};
		Qabs.W := 5 {m};
		Qabs.F := 5 {m};
		Qabs.eta_field := 0.857;
		Qabs.eta_HCE := 0.832;
		Qabs.avail_SF := 1;

		RUN hlfield[field_types].values;
		RUN Qabs.values;

		(*  guesses  *) 
		T_o := 100{K};
	END values;

	METHOD on_load;
		RUN specify;
		RUN values;
	END on_load;
END Qcollected;

