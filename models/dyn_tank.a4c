REQUIRE "ivpsystem.a4l"; (* => modified version of system.a4l, basemodel.a4l *)
REQUIRE "atoms.a4l"; (* => atoms.a4l, measures.a4l, system.a4l, basemodel.a4l *)
(*
 * This file is part of the ASCEND Modeling Library and is released
 * under the GNU Public License as described at the end of this file.
 *)

MODEL tank;
    (* List of Variables *)
    dM_dt IS_A molar_rate;
    M IS_A mole;
    input IS_A molar_rate;
    output IS_A molar_rate;
    Volume IS_A volume;
    density IS_A real_constant;
    dynamic IS_A boolean;
    t IS_A time;

    (* Equations *)
    dM_dt = input - output;
    M = Volume * density;

    (* Assignment of values to Constants *)
    density :==10 {mol/m^3};

    METHODS
    METHOD check_self;
	IF (input < 1e-4 {mole/s}) THEN
	    STOP {Input dried up in tank};
	END IF;
	IF (output < 1e-4 {mole/s}) THEN
	    STOP {Output dried up in tank};
	END IF;
    END check_self;

    METHOD check_all;
	RUN check_self;
    END check_all;

    METHOD default_self;
	dynamic := FALSE;
	t :=0 {sec};
	dM_dt :=0 {mol/sec};
	dM_dt.lower_bound := -1e49 {mol/sec};
	input := 1 {mol/sec};
	output := 1 {mol/sec};
    END default_self;

    METHOD default_all;
	RUN default_self;
    END default_all;

    METHOD bound_self;
    END bound_self;

    METHOD bound_all;
	     RUN bound_self;
    END bound_all;

    METHOD scale_self;
    END scale_self;

    METHOD scale_all;
	RUN scale_self;
    END scale_all;

    METHOD seqmod;
	FIX dM_dt;
	FREE M;
	FIX Volume;
	FIX input;
	FREE output;
	IF dynamic THEN
	    FREE dM_dt;
	    FIX M;
	    FREE Volume;
	    FIX output;
	END IF;
    END seqmod;

    METHOD specify;
	FIX input;
	RUN seqmod;
    END specify;

    METHOD set_ode;
	(* set ODE_TYPE -1=independent variable,
 	   0=algebraic variable, 1=state variable,
	   2=derivative *)
	t.ode_type :=-1;
	dM_dt.ode_type :=2;
	M.ode_type :=1;
	(* Set ODE_ID *)
	dM_dt.ode_id :=1;
	M.ode_id :=1;
    END set_ode;

    METHOD set_obs;
	(* Set OBS_ID to any integer value greater
	   than 0, the variable will be recorded
	   (i.e., observed) *)
	M.obs_id :=1;
	Volume.obs_id :=2;
	input.obs_id :=3;
	output.obs_id :=4;
    END set_obs;

    METHOD values;
	Volume :=5 {m^3};
	input :=100 {mole/s};
    END values;

METHOD on_load;
	RUN default_self;
	dynamic := TRUE;
	RUN reset;
	RUN specify;
	RUN set_obs;
	RUN set_ode;
END on_load;

END tank;


(*
 *  dyn_tank.a4c
 *  by Duncan Coffey
 *  Part of the ASCEND Library
 *  $Date: 1998/06/17 19:05:02 $
 *  $Revision: 1.2 $
 *  $Author: mthomas $
 *  $Source: /afs/cs.cmu.edu/project/ascend/Repository/models/dyn_tank.a4c,v $
 *
 *  This file is part of the ASCEND Modeling Library.
 *
 *  Copyright (C) 1998  Carnegie Mellon University
 *
 *  The ASCEND Modeling Library is free software; you can redistribute
 *  it and/or modify it under the terms of the GNU General Public
 *  License as published by the Free Software Foundation; either
 *  version 2 of the License, or (at your option) any later version.
 *
 *  The ASCEND Modeling Library is distributed in hope that it will
 *  be useful, but WITHOUT ANY WARRANTY; without even the implied
 *  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *  See the GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with the program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139 USA.  Check the
 *  file named COPYING.
 *)
