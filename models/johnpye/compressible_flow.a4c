(*	ASCEND modelling environment
	Copyright (C) 2011 Carnegie Mellon University

	This program is free software; you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation; either version 2, or (at your option)
	any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with this program; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330,
	Boston, MA 02111-1307, USA.
*)(*
	Calculations of isentropic shocks in air flow, following approach given
	in Potter & Wiggert, 3rd SI edition.

	Intention is to be able to generalise these models for arbitrary fluids as
	supported by FPROPS. But the present models include ideal gas and constant
	specific heat assumptions.

	Author: John Pye
*)

REQUIRE "johnpye/thermo_types.a4c";


(*
	Ideal gas flow node, with ideal gas law, Mach number and speed of sound
	included. No allowance for enthalpy, entropy at this stage.
*)
MODEL ideal_gas_node;
	M "Mach number" IS_A positive_factor;
	p IS_A pressure;
	T IS_A temperature;
	v IS_A specific_volume;
	rho IS_A mass_density;
	Vel IS_A speed;

	MM IS_A molar_weight_constant;
	R IS_A specific_gas_constant;
	R :== 1{GAS_C}/MM;

	rho*v = 1;
	p*v = R * T;

	k "adiabatic index" IS_A real_constant;

	c IS_A speed;
	c = sqrt(k*R*T);

	M = Vel / c;
END ideal_gas_node;


(*
	Add cross-sectional area to the above model; not needed for normal shock
	calculations, but useful in nozzle calcs.
*)
MODEL ideal_gas_duct_node REFINES ideal_gas_node;
	A IS_A area;
	mdot IS_A mass_rate;
	mdot = rho * A * Vel;
END ideal_gas_duct_node;


(* Specific cases for air...*)

MODEL air_node REFINES ideal_gas_node;
	MM :== 28.97 {kg/kmol};
	k :== 1.4;
END air_node;

MODEL air_duct_node REFINES ideal_gas_duct_node;
	MM :== 28.97 {kg/kmol};
	k :== 1.4;
END air_duct_node;

(*-----------------------NORMAL SHOCK IN ISENTROPIC FLOW----------------------*)

(*
	Model of a stationary normal shock in air. Using a moving frame of
	reference, it can be used to model a moving shock wave as well.

	Equations from Potter & Wiggert, 3rd SI edition, sects 9.1, 9.2 and 9.4.
*)
MODEL air_normal_shock;
	S1, S2 IS_A air_node;
	k ALIASES S1.k;
	
	S2.M^2 = ( S1.M^2 + 2/(k-1) ) / (2*k/(k-1)*S1.M^2 - 1);

	S2.p / S1.p = 2*k/(k+1)*S1.M^2 - (k-1)/(k+1);

	S2.T / S1.T = ( 1 + (k-1)/2*S1.M^2) * (2*k/(k-1)*S1.M^2 - 1)/ ((k+1)^2/2/(k-1)*S1.M^2);
END air_normal_shock;

(*------------------------------EXAMPLE MODELS -------------------------------*)

(*
	This model reproduces the results of Example 9.5 from Potter & Wiggert, 
	3rd SI edition. The question asks to determine the pressure and temperature 
	conditions downstream of a shock wave passing through ambient air of given
	state.

	Tested, works OK -- JP
*)
MODEL example_potter_wiggert_ex_9_5 REFINES air_normal_shock;
METHODS
METHOD on_load;
	FIX S1.Vel, S1.p, S1.T;
	S1.Vel := 450 {m/s};
	S1.p := 80 {kPa};
	S1.T := 15 {K} + 273.15 {K};
END on_load;
END example_potter_wiggert_ex_9_5;

(*
	This model reproduces the results of Example 9.5 from Potter & Wiggert, 
	3rd SI edition. This problem shows the wind speeds implicit behind a strong
	shock wave such as that arising from a high-powered bomb explosions.

	Although the problem as given in P&W can be solved even without doing so,
	we have added an assumption that the ambient air pressure is 101.3 kPa. This
	allows the model to be 'square' and the pressure and temperature behind the
	shock wave (4.83 bar, 500 K) to also be calculated.

	Tested, works OK -- JP
*)
MODEL example_potter_wiggert_ex_9_6 REFINES air_normal_shock;
	Vel_induced IS_A speed;
	Vel_induced = S2.Vel - S1.Vel;
METHODS
METHOD on_load;
	FIX S1.Vel, S1.T, S1.p;
	S1.Vel := 700 {m/s};
	S1.T := 15 {K} + 273.15 {K};
	S1.p := 101.3 {kPa};
END on_load;
END example_potter_wiggert_ex_9_6;


(*----------------------------STAGNATION CONDITIONS---------------------------*)

(*
	Model of isentropic flow in a converging or diverging nozzle over an
	interval in which no shock is present.
*)
MODEL isentropic_flow_segment;
	inlet, outlet IS_A air_duct_node;
	k ALIASES inlet.k;
	inlet.mdot, outlet.mdot ARE_THE_SAME;

	(* conservation of energy *)
	0 = (outlet.Vel^2 - inlet.Vel^2) / 2 + k/(k-1)*(outlet.p * outlet.v - inlet.p * inlet.rho);

	(* isentropic <=> adiabatic <=> no heat transfer *)
	outlet.T / inlet.T = (outlet.p / inlet.p)^((k-1)/k);

	(* conservation of mass *)
	inlet.rho * inlet.A * inlet.Vel = outlet.rho * outlet.A * outlet.Vel;

END isentropic_flow_segment;


MODEL isentropic_stagnation;
	flow IS_A air_duct_node;
	stag IS_A air_node;

	(* conservation of mass *)
	stag.Vel = 0;
	mdot ALIASES flow.mdot;
	k ALIASES flow.k;

	(* conservation of energy *)
	stag.T = flow.T * (1 + (k-1)/2 * flow.M^2);

	(* isentropic *)
	(*(1 + (k-1)/2 * flow.M^2 ) * flow.p^((k-1)/k) = stag.p^((k-1)/k);*)
	(stag.rho / flow.rho)^(k-1) = 1 + (k-1)/2*flow.M^2;

END isentropic_stagnation;

(*
	This model calculates the pressure at the throat (critical area) for an
	assumed upstream reservoir pressure, and isentropic flow inbetween.

	Reproduces a part of Potter & Wiggert Example 9.2.
*)
MODEL isentropic_critical_area;
	stag IS_A air_node;
	crit IS_A air_duct_node;
	k ALIASES crit.k;

	crit.T / stag.T = 2 / (k+1);
	(*crit.p / stag.p = (2/(k+1))^(k/(k-1));*)
	crit.rho / stag.rho = (2/(k+1))^(1/(k-1));

	(* stagnation: no velocity *)
	stag.Vel = 0;

	(* supersonic at the critical area *)
	crit.M = 1;
METHODS
METHOD on_load;
	FIX stag.p, stag.T;
	stag.p := 500 {kPa};
	stag.T := 20 {K} + 273.15 {K};

	FIX crit.A;
	crit.A := 10 {cm^2};
END on_load;
END isentropic_critical_area;

MODEL isentropic_stagnation_test_1 REFINES isentropic_stagnation;
METHODS
METHOD on_load;
	FIX stag.p, stag.T, flow.A;
	stag.p := 500 {kPa};
	stag.T := 20 {K} + 273.15 {K};
	flow.A := 10 {cm^2};

	FIX mdot;
	mdot := 1.167 {kg/s};
END on_load;
END isentropic_stagnation_test_1;

MODEL isentropic_stagnation_test_2 REFINES isentropic_stagnation;
METHODS
METHOD on_load;
	FIX stag.p, flow.A;
	stag.p := 500 {kPa};
	stag.T := 20 {K} + 273.15 {K};
	flow.A := 10 {cm^2};

	FIX flow.M;
	flow.M := 1;
END on_load;
END isentropic_stagnation_test_2;




(*
	Example 9.7 from Potter & Wiggert, 3rd SI edition. A converging-diverging
	nozzle with normal shock at the exit plane, exiting to ambient conditions.
	Exit diameter and throat diameter given. We calculate receiver pressure and
	flow rate.

	Note:
	* throat must be at M = 1
	* isentropic flow from throat to exit occurs with area ratio given
	* upstream (reservoir) conditions are 90 kPa, 20 °C - ambient.
*)
MODEL example_potter_wiggert_ex_9_7 REFINES air_normal_shock;

	


(*
	Flow from reservoir at 20°C, 500 kPa to receiver at 300 kPa.
	Potter & Wiggert 3rd SI Edition, Example 9.2.

	FIXME this model isn't working yet.
*)
MODEL example_potter_wiggert_ex_9_2;
	(* wire up a reservoir, through a flowing node, to a receiver *)
	res, rec IS_A isentropic_stagnation;
	inlet ALIASES res.stag;
	outlet ALIASES rec.stag;
	res.flow, rec.flow ARE_THE_SAME;
	exit ALIASES res.flow;
METHODS
METHOD on_load;

	FIX inlet.p, inlet.T;
	inlet.p := 500 {kPa};
	inlet.T := 20 {K} + 273.15 {K};

	FIX exit.A;
	exit.A := 10 {cm^2};

	FIX outlet.p;
	outlet.p := 300 {kPa};
END on_load;
END example_potter_wiggert_ex_9_2;



