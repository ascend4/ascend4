REQUIRE "johnpye/ideal_steam.a4c";
REQUIRE "johnpye/iapws_sat_curves.a4c";
REQUIRE "johnpye/iapws95.a4c";

MODEL condenser_lmtd(
	S_in WILL_BE thermo_state;
	S_out WILL_BE thermo_state;
);
	T_h1 ALIASES S_in.T;
	T_h2 ALIASES S_out.T;
	h_h1 ALIASES S_in.h;
	h_h2 ALIASES S_out.h;

	mdot_in IS_A mass_rate;

	T_c1 IS_A temperature;
	T_c2 IS_A temperature;

	T_c_in ALIASES T_c2;
	T_c_out ALIASES T_c1;


	LMTD IS_A delta_temperature;

	DT_1, DT_2 IS_A delta_temperature;
	
	DT_1 = T_h1 - T_c1;
	DT_2 = T_h2 - T_c2;

	lmtd: DT_2/DT_1 = exp( (DT_2 - DT_1) / LMTD );

	UA IS_A ua_value;
	q IS_A energy_rate;

	q = UA * LMTD;

	q = mdot_in * (h_h1 - h_h2);

	S_out.p = S_in.p;

METHODS
METHOD specify;
	FIX UA;
	FIX T_c_in;
	FIX mdot_in;
END specify;
METHOD values;
	UA := 1000 {W/m^2/K} * 4 {m} * 900 * 2*3.1415926* (0.01 {m})/2;
	T_c_in := 273.15{K} + 20 {K};
	mdot_in := 1 {kg/s};
	(* free values *)
	T_h2 := T_h1 - 20{K};
	h_h2 := h_h1 - 4.2{kJ/kg/K}*20{K};
END values;
METHOD bound_self;
	DT_1.lower_bound := 0{K};
	DT_2.lower_bound := 0{K};
	q.lower_bound := 0{W};
	T_h2.upper_bound := T_h1;
	T_h2.lower_bound := T_c_out;
	h_h2.upper_bound := h_h1;
END bound_self;
END condenser_lmtd;

(*--------------------------*)

(* test model for the above *)
MODEL condenser_lmtd_test;
	S1 IS_A iapws95_1phase;
	S2 IS_A iapws95_1phase;

	T_hi ALIASES C.S_in.T;
	T_ho ALIASES C.S_out.T;
	T_ci ALIASES C.T_c_in;
	T_co ALIASES C.T_c_out;

	p_in ALIASES S1.p;

	C IS_A condenser_lmtd(S1,S2);

	q ALIASES C.q;

METHODS
METHOD default_self;	
	RUN reset; RUN values; RUN bound_self;
END default_self;
METHOD specify;
	RUN C.specify;
	FIX T_hi;
	FIX T_co;
	FIX p_in;
END specify;
METHOD values;
	RUN C.values;
	T_hi := 273.15{K} + 280 {K};
	T_co := 273.15{K} + 25 {K};
	p_in := 1{bar};
	q := 4.2{kJ/s};
END values;
METHOD bound_self;
	RUN C.bound_self;
END bound_self;
END condenser_lmtd_test;
	

(*--------------------------*)

(*
	This model is parameterised in order that we
	don't end up with multiple assertions about the 
	saturated state at the inlet, see condenser_lmtd_sat_test
*)
MODEL condenser_lmtd_sat(
	S_in WILL_BE thermo_state;
	S_out WILL_BE thermo_state;
);
	mdot_in IS_A mass_rate;
	mdot_out ALIASES mdot_in;

	T_ci IS_A temperature; (* cold inlet *)
	T_co IS_A temperature; (* cold outlet *)
	T_hi ALIASES S_in.T;
	T_ho ALIASES S_out.T;

	LMTD IS_A delta_temperature;

	DT_c, DT_1, DT_2 IS_A delta_temperature;
	
	z_DT_c: DT_c = T_co - T_ci;
	z_DT_1: DT_1 = T_hi - T_ci;
	z_DT_2: DT_2 = T_hi - T_co;

	(* this is a better-converging form for the LMTD equation *)
	lmtd: DT_1/DT_2 = exp(DT_c / LMTD);

	UA IS_A ua_value;
	q IS_A energy_rate;

	z_q_LMTD: q = UA * LMTD;

	(* condensation point *)
	Sf ALIASES S_out;

	sat IS_A iapws_sat_density;
	z_rhof: sat.rhof = Sf.rho;
	z_T_sat: sat.T = Sf.T;

	z_T_const: S_in.T = Sf.T;

	C_c IS_A heat_capacity;
	cp_c IS_A specific_heat_capacity;
	mdot_c IS_A mass_rate;
	C_c = cp_c * mdot_c;
	z_Q_h: q = mdot_in * (S_in.h - Sf.h);
	z_Q_c: q = C_c * (T_co - T_ci);

METHODS
METHOD specify;
	FIX UA;
	FIX T_ci;
	FIX mdot_in;
	FIX cp_c;
END specify;
METHOD values;
	UA := 4000 {W/m^2/K} * 4 {m} * 900 * 2*3.1415926* (0.01 {m})/2;
	T_ci := 273.15{K} + 200 {K};
	mdot_in := 10 {kg/s};
	cp_c := 4.2 {kJ/kg/K};
	(* free values *)
	T_co := 273.15{K} + 240 {K};
	C_c := 200 {kJ/K};
	q := 15000 {kW};
	LMTD := 34 {K};
END values;
METHOD bound_self;
	Sf.tau.lower_bound := 1;
	DT_c.lower_bound := 0{K};
	DT_1.lower_bound := 0{K};
	DT_2.lower_bound := 0{K};
	Sf.rho.lower_bound := Sf.rhoc;
	mdot_c.upper_bound := 1000 {kg/s};
	mdot_c.lower_bound := 0.1 {kg/s};
END bound_self;
END condenser_lmtd_sat;

(*------------------------------*)

MODEL condenser_lmtd_sat_test;
	Sg IS_A iapws95_1phase;
	Sf IS_A iapws95_1phase;

	sat IS_A iapws_sat_density;
	sat.rhog, Sg.rho ARE_THE_SAME;
	sat.T, Sg.T ARE_THE_SAME;

	C IS_A condenser_lmtd_sat(Sg,Sf);

	T_hi ALIASES Sg.T;
	T_ho ALIASES Sf.T;

	T_ci ALIASES C.T_ci;
	T_co ALIASES C.T_co;

	mdot ALIASES C.mdot_in;

	Q ALIASES C.q;
	C_c ALIASES C.C_c;
	mdot_c ALIASES C.mdot_c;

METHODS
METHOD default_self;	
	RUN reset; RUN values; RUN bound_self;
END default_self;
METHOD specify;
	RUN C.specify;
	FIX T_hi;
END specify;
METHOD values;
	RUN C.values;
	T_hi := 273.15{K} + 280 {K};
END values;
METHOD bound_self;
	RUN C.bound_self;
END bound_self;
METHOD self_test;
	ASSERT (C.q - 15430{kW}) <  1{kW};
END self_test;
END condenser_lmtd_sat_test;

