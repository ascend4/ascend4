REQUIRE "johnpye/thermo_types.a4c";
IMPORT "johnpye/planck/planck";

(* 
This is a model of a surface that emits radiation with varying emissivity in 
different user-defined wavelength bands. The bands are 
	zero -- lam[1]
	lam[1] -- lam[2]
	...
	lam[n] -- infinity

The surface is assumed to have absorbed a certain amount of head Q_inc. At
present we are not modelling the absorption process, nor any other loss 
mechanisms (eg conduction, convection). 

The Planck integral is evaluated according to the method of 
Michels, T. E. Planck, 1968. "Functions and Integrals; Methods of Computation"
Technical report NASA TN D-4446, NASA Goddard Space Flight Center.
http://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19680008986.pdf

The function 'plnkin' from the above paper has been implemented as an 'external 
relation' in ASCEND, and is loaded by the above IMPORT statement.
*)
MODEL bandedemission;
	T IS_A temperature;

	(* number of specified wavelengths; number of intervals will be n+1 *)
	n IS_A integer_constant;
	n :== 2;

	(*   int0          int1             int n-1            int n   
	   0..lam[1], lam[1]..lam[2],... lam[n-1]..lam[n], lam[n]..inf *)

	lambda[1..n] "wavelength" IS_A distance;
	I_lam[0..n+1] "normalised Planck integral" IS_A fraction;
	I_lam[0] = 0;
	I_lam[n+1] = 1;
	FOR i IN [1..n] CREATE
		I_eq[i]: planck(
			lambda[i], T : INPUT;
			I_lam[i] :  OUTPUT
		);
	END FOR;

	eps[0..n] "band emissivity" IS_A fraction;
	Qdd_emit_tot, Qdd_emit[0..n] "band emissive power" IS_A energy_flux;
	FOR i IN [0..n] CREATE
		Qdd_emit[i] = eps[i] * 1{SIGMA_C} * T^4 * (I_lam[i+1] - I_lam[i]);
	END FOR;

	Qdd_emit_tot = SUM[Qdd_emit[i] | i IN [0..n]];

	Q_inc IS_A energy_flux;
	
	(* energy balance *)
	Qdd_emit_tot = Q_inc;
METHODS
METHOD on_load;
	T := 350 {K};
	FIX lambda[1] := 700 {nm};
	FIX lambda[2] := 5000 {nm};

	FIX eps[0] := 0.95;
	FIX eps[1] := 0.1;
	FIX eps[2] := 0.7;

	FIX Q_inc := 800 {W/m^2};
END on_load;
END bandedemission;


