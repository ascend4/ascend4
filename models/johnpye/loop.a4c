REQUIRE "johnpye/ideal_steam.a4c";
REQUIRE "johnpye/absorber.a4c";
REQUIRE "johnpye/surgetank.a4c";
REQUIRE "johnpye/condenser.a4c";

MODEL absorber_and_condenser;
	A IS_A absorber;
	C IS_A condenser;

	A.mdot_gas_out, C.mdot_gas_in ARE_THE_SAME;
	A.S_out, C.S_in ARE_THE_SAME;

	Q_A ALIASES A.Q;
	Q_C ALIASES C.Q;
	mdot_water_in ALIASES A.mdot_water_in;
	mdot_water_out ALIASES C.mdot_water_out;
	m_water ALIASES A.m_water;

METHODS
METHOD default_self;
	RUN reset; RUN values;
END default_self;

METHOD specify;
	RUN A.specify;
	FIX C.h_out;
END specify;

METHOD values;
	RUN A.values;
	C.h_out := 400 {kJ/kg};
END values;

END absorber_and_condenser;



(*
	Open-loop model. given the absorber conditions, what pressure is required
	in the surge tank in order for the mass to be contained ?
*)
MODEL absorber_and_condenser_and_surgetank;
	A IS_A absorber;
	C IS_A condenser;
	S IS_A surgetank;

	(* join absorber and condenser  *)
	A.mdot_gas_out, C.mdot_gas_in ARE_THE_SAME;
	A.S_out, C.S_in ARE_THE_SAME;

	(* join condenser and surge tank *)
	C.mdot_water_out, S.mdot_water_in ARE_THE_SAME;

	Q_A ALIASES A.Q;
	Q_C ALIASES C.Q;
	mdot_A_in ALIASES A.mdot_water_in;
	mdot_C_out ALIASES C.mdot_water_out;
	
	m_A ALIASES A.m_water;
	m_S ALIASES S.m_water;

	m_water IS_A mass;

	m_A + m_S = m_water;

	p_S ALIASES S.p;
	V_water_S ALIASES S.V_water;
	
METHODS
METHOD default_self;
	RUN reset; RUN values;
END default_self;

METHOD specify;
	RUN A.specify;
	FIX C.h_out;

	FIX S.T, S.rho_water;
	FIX S.V_vessel,	S.m_gas;
	FIX m_water;

END specify;

METHOD values;
	m_water := 8000 {kg};

	RUN A.values;
	C.h_out := 400 {kJ/kg};

	S.rho_water := 997 {kg/m^3};
	S.T := 400 {K};
	S.V_vessel := 10000 {L};
	S.m_gas := 60 {kg};
END values;

END absorber_and_condenser_and_surgetank;



MODEL loop;
	A IS_A absorber;
	C IS_A condenser;
	S IS_A vessel_with_water;

	m_water_total IS_A mass;

	A.S_out, C.S_in ARE_THE_SAME; (* absorber outlet steam goes to the condenser *)
	A.p, S.p ARE_THE_SAME; (* absorber pressure equals surge tank pressure *)
	
	A.Q, C.Q ARE_THE_SAME; (* heat out of condenser must balance that absorbed *)	

	p ALIASES A.p;
	Q ALIASES A.Q;
	T_abs_out ALIASES A.T;
	m_abs_water ALIASES A.m_water;
	m_surge_water ALIASES S.m_water;
	m_gas  ALIASES S.m_gas;
	V_surge ALIASES S.V_vessel;
	V_absorber ALIASES A.V_total;
	absorber_void_fraction ALIASES A.alpha;

	m_surge_water + m_abs_water = m_water_total;

METHODS
METHOD default_self;
	RUN reset;
	RUN values;
END default_self;

METHOD specify;
	FIX A.Q,  A.V_total;
	FIX S.V_vessel,  S.m_gas;
	FIX m_water_total;
	FIX C.h_out;
END specify;

METHOD values;
	A.Q := 400 {W/m^2} * 20 * 40{mm} * 300{m};	
	A.V_total := 300{m} * 16 * 1{PI}*( 40{mm} )^2;
	S.V_vessel := 10 {m^3};
	S.m_gas := 7.27101 {kg};
	m_water_total := 3000 {kg};
	C.h_out := 400 {kJ/kg};
END values;

END loop;
