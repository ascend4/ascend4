(* ASCEND multi-component ideal-solution routine

   To perform the simulation, load the file into ASCEND and run 'setup'.

   This file performs further dew-point calculations, with the goal of 
   confirming that a user can simply set the temperature equal to the 
   dew or bubble temperature, and find other properties normally.

   Since temperature is set at the dew temperature, there should be no 
   liquid, or only a negligible amount.
 *)

REQUIRE "atoms.a4l";
REQUIRE "johnpye/thermo_types.a4c";
IMPORT "johnpye/fprops/mixture";
REQUIRE "johnpye/fprops/mixtures.a4l";

(* The mixture_test model *)
MODEL mixture_test;
	(* Declare variables to hold various mixture properties *)
	T IS_A temperature;         (* mixture (dew) temperature *)
	p IS_A pressure;            (* mixture pressure; with 'T' this sets the state *)
	rho IS_A mass_density;      (* mixture density *)
	u,                          (* mixture internal energy *)
	u_ph1 IS_A specific_energy; (* phase 1 internal energy *)
	h IS_A specific_enthalpy;   (* mixture enthalpy *)
	s IS_A specific_entropy;    (* mixture entropy *)

	(* Declare variables to hold phase-accounting data *)
	nphase,                              (* number of phases *)
	ph IS_A phase_count;                 (* first phase *)
	phase_frac[1..3] IS_A mass_fraction; (* mass fraction of each phase *)

	(* Declare and specify a mixture with its composition *)
	mixt IS_A mixture_spec;
	mixt.npure :== 4;
	mixt.components[1] :== 'ammonia';
	mixt.components[2] :== 'carbonmonoxide';
	mixt.components[3] :== 'cyclohexane';
	mixt.components[4] :== 'benzene';
	mixt.eos :== 'pengrob';
	mixt.xs[1] :== 0.3;
	mixt.xs[2] :== 0.35;
	mixt.xs[3] :== 0.20;
	mixt.xs[4] :== 0.15;

	(* -----------------------------------------------------------------
	   Calculate bubble, dew temperatures and pressures *)
	mix_temperature : mixture_dew_T(
		p : INPUT;
		T : OUTPUT;
		mixt : DATA
	);
	mix_phase_data : mixture_flash_phases(
		T, p : INPUT;
		nphase, phase_frac[1], phase_frac[2], phase_frac[3] : OUTPUT;
		mixt : DATA
	);

	(* -----------------------------------------------------------------
	   Calculate density at several conditions *)
	mix_density : mixture_rho(
		T, p : INPUT;
		rho : OUTPUT;
		mixt : DATA
	);

	(* -----------------------------------------------------------------
	   Calculate internal energy for whole mixture and one phase, and other 
	   properties for the whole mixture.
	 *)
	mix_u : mixture_u(
		T, p : INPUT;
		u : OUTPUT;
		mixt : DATA
	);
	mix_phase_u : mixture_phase_u(
		T, p, ph : INPUT;
		u_ph1 : OUTPUT;
		mixt : DATA
	);
	mix_h : mixture_h(
		T, p : INPUT;
		h : OUTPUT;
		mixt : DATA
	);
	mix_s : mixture_s(
		T, p : INPUT;
		s : OUTPUT;
		mixt : DATA
	);
	
METHODS
(* Fix the variables that are to be fixed *)
METHOD specify;
	FIX p;
	FIX ph;
END specify;
(* Set values of the fixed variables *)
METHOD values;
	p := 2 {bar};
	ph := 1;
END values;
(* Set solver and other options *)
METHOD options;
	SOLVER QRSlv;
	OPTION convopt 'RELNOM_SCALE';
END options;
(* Quick alias for all preceeding methods; readies the model for solving *)
METHOD setup;
	RUN specify;
	RUN values;
	RUN options;
END setup;
END mixture_test;

