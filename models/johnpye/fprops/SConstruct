# Standalone 'SConstruct' to demonstrate how you can build
# this ASCEND external library against an existing copy of
# ASCEND installed on your system.

env = Environment()

if WhereIs('ascend-config'):
	env.ParseConfig(['ascend-config','--libs','--cppflags'])
else:
	print "ERROR: no ascend-config in path"
	env.Append(
		LIBS=["ascend"]
		,LIBPATH=["#/../../.."]
		,CPPPATH=["#/../../.."]
	)

env.Append(
	CFLAGS=['-g','-Wall']
)

#if WhereIs('gsl-config'):
#	env.ParseConfig(['gsl-config','--libs','--cflags'])

srcs = ['mbwr.c','asc_mbwr.c']

env.SharedLibrary('mbwr_ascend',srcs)

env['fluids'] = ['ammonia','water','nitrogen','hydrogen','carbondioxide','methane','carbonmonoxide','ethanol',
'acetone','carbonylsulfide','decane','hydrogensulfide','isopentane','krypton',
'neopentane','nitrousoxide','sulfurdioxide','toluene','xenon','butane','butene','cisbutene','isobutene','transbutene','dimethylether','ethane','parahydrogen','isobutane','r41','r116','r141b','r142b','r218','r245fa']

coresrcs = ['ideal.c', 'helmholtz.c', 'sat.c', 'derivs.c', 'solve_ph.c']

srcs = coresrcs + ["%s.c" % f for f in env['fluids']]

env['shobjs'] = [env.SharedObject(s) for s in srcs]

env.SharedLibrary('helmholtz_ascend',env['shobjs'] + ['asc_helmholtz.c'])

env.SConscript('python/SConscript',['env'])

